/**
 * 
 */
package poc.algo.ds;

import poc.algo.ds.contiguous.queue.PriorityQueueImpl;

/**
 * @author NAYAKDUR
 *
 */
public class Main {

	class Employee implements Comparable<Employee>{
		int age;
		int empId;

		@Override
		public int hashCode() {
			return empId;
		}
		@Override
		public String toString() {
			return "Employee [age=" + age + ", empId=" + empId + "]";
		}

		@Override
		public int compareTo(Employee o) {
			if (this.empId > o.empId){
				return 1;
			}else if (this.empId < o.empId){
				return -1;
			}
			return 0;
		}
	}
	/**
	 * @param args
	 */
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		PriorityQueueImpl<Employee> priorityQueueImpl = new PriorityQueueImpl<Employee>();
		Integer[] empId = {3,9,1,2,5,4,0,12,13,14};
		for (int i=0; i < empId.length; i++){
			Employee employee = new Employee();
			employee.empId = empId[i];
			employee.age = 20+i;
			binarySearchTree.insert(employee);
//			System.out.println(i);
		}

	}

}
